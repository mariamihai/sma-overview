version: '3'
services:
  #  database:
  #    image: postgres
  #    container_name: database
  #    ports:
  #      - "5432:5432"
  #    environment:
  #      POSTGRES_USER: "postgres"
  #      POSTGRES_PASSWORD: "p0stgr@s"
  #      POSTGRES_DB: "eagle_eye_local"
  eureka:
    image: mariamihai/sma-eureka-service:latest
    container_name: eureka
    ports:
      - 8761:8761
    environment:
      SERVER_PORT: "8761"
    restart: on-failure

  config-service:
    image: mariamihai/sma-configuration-service:latest
    container_name: config
    ports:
      - 8888:8888
    depends_on:
      - eureka
    environment:
      SERVER_PORT: "8888"
      SPRING_PROFILES_ACTIVE: "native, local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure

  special-routes-service:
    image: mariamihai/sma-special-routes-service:latest
    container_name: special-routes
    ports:
      - 8070:8070
    depends_on:
      - eureka
      - config-service
    environment:
      SEVER_PORT: "8070"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure

  organization-service-1:
    image: mariamihai/sma-organization-service:latest
    container_name: organization-1
    ports:
      - 8090:8090
    depends_on:
      - eureka
      - config-service
    #      - database
    environment:
      SERVER_PORT: "8090"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure

  organization-service-2:
    image: mariamihai/sma-organization-service:latest
    container_name: organization-2
    ports:
      - 8091:8091
    depends_on:
      - eureka
      - config-service
    #      - database
    environment:
      SERVER_PORT: "8091"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure

  organization-new-service:
    image: mariamihai/sma-organization-new-service:latest
    container_name: organization-new
    ports:
      - 8099:8099
    depends_on:
      - eureka
      - config-service
    #      - database
    environment:
      SERVER_PORT: "8099"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure

  licensing-service:
    image: mariamihai/sma-licensing-service:latest
    container_name: licensing
    ports:
      - 8080:8080
    depends_on:
      - eureka
      - config-service
#      - database
    environment:
      SEVER_PORT: "8080"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    env_file:
      - local.env
    restart: on-failure


  gateway-service:
    image: mariamihai/sma-gateway-service:latest
    container_name: gateway
    ports:
      - 5555:5555
    depends_on:
      - eureka
      - config-service
      - special-routes-service
      - organization-service-1
      - organization-service-2
      - organization-new-service
      - licensing-service
    environment:
      SERVER_PORT: "5555"
      SPRING_PROFILES_ACTIVE: "local-docker"
      SERVICE_URL_DEFAULT_ZONE: http://eureka:8761/eureka/
    restart: on-failure
#    command: >
#      /bin/sh -c "
#        echo Waiting for config-service start...;
#        while ! nc -z config-service 8888;
#        do
#          sleep 1;
#        done;
#        echo Connected!;
#      "
#     command: bash -c "sleep 2 && until ping -qc1 config-service; do sleep 1; done &>/dev/null"